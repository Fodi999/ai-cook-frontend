'use client';

import { useState } from 'react';
import { ChefHat, Search, Star, Clock, Users, Heart, Filter, ArrowLeft } from 'lucide-react';
import { motion } from 'framer-motion';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';
import Navigation from '@/components/Navigation';
import { useT } from '@/hooks/useT';

export default function Recipes() {
  const [searchQuery, setSearchQuery] = useState('');
  const [selectedCategory, setSelectedCategory] = useState('all');
  const [selectedDifficulty, setSelectedDifficulty] = useState('all');
  const t = useT();

  const categories = [
    { value: 'all', label: t('recipes.all_categories') },
    { value: 'breakfast', label: t('recipes.category_breakfast') },
    { value: 'lunch', label: t('recipes.category_lunch') },
    { value: 'dinner', label: t('recipes.category_dinner') },
    { value: 'desserts', label: t('recipes.category_dessert') },
    { value: 'snacks', label: t('recipes.category_snacks') },
    { value: 'drinks', label: '–ù–∞–ø–∏—Ç–∫–∏' }
  ];

  const difficulties = [
    { value: 'all', label: '–õ—é–±–∞—è —Å–ª–æ–∂–Ω–æ—Å—Ç—å' },
    { value: 'easy', label: t('recipes.difficulty_easy') },
    { value: 'medium', label: t('recipes.difficulty_medium') },
    { value: 'hard', label: '–°–ª–æ–∂–Ω–æ' }
  ];

  const recipes = [
    {
      id: 1,
      title: "–ü–∞—Å—Ç–∞ –ö–∞—Ä–±–æ–Ω–∞—Ä–∞",
      description: "–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–æ–µ –∏—Ç–∞–ª—å—è–Ω—Å–∫–æ–µ –±–ª—é–¥–æ —Å –±–µ–∫–æ–Ω–æ–º, —è–π—Ü–∞–º–∏ –∏ —Å—ã—Ä–æ–º –ø–∞—Ä–º–µ–∑–∞–Ω",
      time: "30 –º–∏–Ω",
      difficulty: "medium",
      category: "dinner",
      rating: 4.8,
      likes: 245,
      author: "–ú–∞—Ä–∏—è –ö.",
      image: "üçù",
      ingredients: ["—Å–ø–∞–≥–µ—Ç—Ç–∏", "–±–µ–∫–æ–Ω", "—è–π—Ü–∞", "–ø–∞—Ä–º–µ–∑–∞–Ω", "—á–µ—Ä–Ω—ã–π –ø–µ—Ä–µ—Ü"]
    },
    {
      id: 2,
      title: "–ê–≤–æ–∫–∞–¥–æ —Ç–æ—Å—Ç",
      description: "–ü–æ–ª–µ–∑–Ω—ã–π –∏ –±—ã—Å—Ç—Ä—ã–π –∑–∞–≤—Ç—Ä–∞–∫ —Å –∞–≤–æ–∫–∞–¥–æ –∏ —è–π—Ü–æ–º –ø–∞—à–æ—Ç",
      time: "15 –º–∏–Ω",
      difficulty: "easy",
      category: "breakfast",
      rating: 4.6,
      likes: 189,
      author: "–ê–ª–µ–∫—Å–µ–π –ú.",
      image: "ü•ë",
      ingredients: ["—Ö–ª–µ–±", "–∞–≤–æ–∫–∞–¥–æ", "—è–π—Ü–æ", "–ª–∏–º–æ–Ω", "—Å–æ–ª—å"]
    },
    {
      id: 3,
      title: "–®–æ–∫–æ–ª–∞–¥–Ω—ã–π —Ñ–æ–Ω–¥–∞–Ω",
      description: "–ò–∑—ã—Å–∫–∞–Ω–Ω—ã–π –¥–µ—Å–µ—Ä—Ç —Å –∂–∏–¥–∫–∏–º —à–æ–∫–æ–ª–∞–¥–Ω—ã–º —Ü–µ–Ω—Ç—Ä–æ–º",
      time: "45 –º–∏–Ω",
      difficulty: "hard",
      category: "desserts",
      rating: 4.9,
      likes: 312,
      author: "–ï–ª–µ–Ω–∞ –í.",
      image: "üç´",
      ingredients: ["—Ç–µ–º–Ω—ã–π —à–æ–∫–æ–ª–∞–¥", "–º–∞—Å–ª–æ", "—è–π—Ü–∞", "–º—É–∫–∞", "—Å–∞—Ö–∞—Ä"]
    },
    {
      id: 4,
      title: "–ë–æ—Ä—â —É–∫—Ä–∞–∏–Ω—Å–∫–∏–π",
      description: "–¢—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω—ã–π —É–∫—Ä–∞–∏–Ω—Å–∫–∏–π –±–æ—Ä—â —Å –≥–æ–≤—è–¥–∏–Ω–æ–π –∏ —Å–º–µ—Ç–∞–Ω–æ–π",
      time: "2 —á",
      difficulty: "medium",
      category: "lunch",
      rating: 4.7,
      likes: 156,
      author: "–û–ª—å–≥–∞ –°.",
      image: "üç≤",
      ingredients: ["–≥–æ–≤—è–¥–∏–Ω–∞", "—Å–≤–µ–∫–ª–∞", "–∫–∞–ø—É—Å—Ç–∞", "–º–æ—Ä–∫–æ–≤—å", "–ª—É–∫"]
    },
    {
      id: 5,
      title: "–ì—Ä–µ—á–µ—Å–∫–∏–π —Å–∞–ª–∞—Ç",
      description: "–°–≤–µ–∂–∏–π —Å–∞–ª–∞—Ç —Å —Ñ–µ—Ç–æ–π, –æ–ª–∏–≤–∫–∞–º–∏ –∏ –æ–≤–æ—â–∞–º–∏",
      time: "10 –º–∏–Ω",
      difficulty: "easy",
      category: "snacks",
      rating: 4.5,
      likes: 98,
      author: "–î–º–∏—Ç—Ä–∏–π –ü.",
      image: "ü•ó",
      ingredients: ["–ø–æ–º–∏–¥–æ—Ä—ã", "–æ–≥—É—Ä—Ü—ã", "—Ñ–µ—Ç–∞", "–æ–ª–∏–≤–∫–∏", "–æ–ª–∏–≤–∫–æ–≤–æ–µ –º–∞—Å–ª–æ"]
    },
    {
      id: 6,
      title: "–°–º—É–∑–∏ —Å —è–≥–æ–¥–∞–º–∏",
      description: "–ü–æ–ª–µ–∑–Ω—ã–π —Å–º—É–∑–∏ —Å –∫–ª—É–±–Ω–∏–∫–æ–π, –±–∞–Ω–∞–Ω–æ–º –∏ –π–æ–≥—É—Ä—Ç–æ–º",
      time: "5 –º–∏–Ω",
      difficulty: "easy",
      category: "drinks",
      rating: 4.4,
      likes: 87,
      author: "–ê–Ω–Ω–∞ –õ.",
      image: "ü•§",
      ingredients: ["–∫–ª—É–±–Ω–∏–∫–∞", "–±–∞–Ω–∞–Ω", "–π–æ–≥—É—Ä—Ç", "–º–µ–¥", "–º–æ–ª–æ–∫–æ"]
    }
  ];

  const filteredRecipes = recipes.filter(recipe => {
    const matchesSearch = recipe.title.toLowerCase().includes(searchQuery.toLowerCase()) ||
                         recipe.description.toLowerCase().includes(searchQuery.toLowerCase());
    const matchesCategory = selectedCategory === 'all' || recipe.category === selectedCategory;
    const matchesDifficulty = selectedDifficulty === 'all' || recipe.difficulty === selectedDifficulty;
    
    return matchesSearch && matchesCategory && matchesDifficulty;
  });

  return (
    <>
      <Navigation />
      <div className="min-h-screen bg-gray-50 dark:bg-gray-900">
      
      {/* Hero Section */}
      <div className="bg-white dark:bg-gray-800 border-b border-gray-200 dark:border-gray-700">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
          <div className="text-center">
            <h1 className="text-4xl font-bold text-gray-900 dark:text-white mb-4">{t('recipes.title')}</h1>
            <p className="text-xl text-gray-600 dark:text-gray-300 mb-6">
              –û—Ç–∫—Ä–æ–π—Ç–µ –¥–ª—è —Å–µ–±—è –º–∏—Ä –≤–∫—É—Å–Ω—ã—Ö —Ä–µ—Ü–µ–ø—Ç–æ–≤
            </p>
            <div className="flex items-center justify-center space-x-2">
              <span className="px-3 py-1 text-sm bg-orange-100 dark:bg-orange-900 text-orange-800 dark:text-orange-200 rounded-full">
                {filteredRecipes.length} —Ä–µ—Ü–µ–ø—Ç–æ–≤
              </span>
            </div>
          </div>
        </div>
      </div>

      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        {/* Search and Filters */}
        <div className="mb-8">
          <div className="flex flex-col lg:flex-row gap-4 mb-6">
            {/* Search */}
            <div className="flex-1">
              <div className="relative">
                <Search className="absolute left-4 top-1/2 transform -translate-y-1/2 text-gray-400 h-5 w-5" />
                <Input
                  type="text"
                  placeholder={t('recipes.search_placeholder')}
                  value={searchQuery}
                  onChange={(e) => setSearchQuery(e.target.value)}
                  className="pl-12 h-12 text-lg"
                />
              </div>
            </div>

            {/* Filters */}
            <div className="flex gap-4">
              <Select value={selectedCategory} onValueChange={setSelectedCategory}>
                <SelectTrigger className="w-48 h-12">
                  <SelectValue />
                </SelectTrigger>
                <SelectContent>
                  {categories.map(category => (
                    <SelectItem key={category.value} value={category.value}>
                      {category.label}
                    </SelectItem>
                  ))}
                </SelectContent>
              </Select>

              <Select value={selectedDifficulty} onValueChange={setSelectedDifficulty}>
                <SelectTrigger className="w-48 h-12">
                  <SelectValue />
                </SelectTrigger>
                <SelectContent>
                  {difficulties.map(difficulty => (
                    <SelectItem key={difficulty.value} value={difficulty.value}>
                      {difficulty.label}
                    </SelectItem>
                  ))}
                </SelectContent>
              </Select>
            </div>
          </div>
        </div>

        {/* Recipe Grid */}
        <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
          {filteredRecipes.map((recipe, index) => (
            <motion.div
              key={recipe.id}
              initial={{ opacity: 0, y: 20 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.3, delay: index * 0.1 }}
            >
              <Card className="hover:shadow-lg transition-shadow cursor-pointer group">
                {/* Recipe Image */}
                <div className="h-48 bg-gradient-to-br from-orange-200 to-red-200 dark:from-orange-800 dark:to-red-800 rounded-t-lg flex items-center justify-center text-6xl group-hover:scale-105 transition-transform">
                  {recipe.image}
                </div>

                {/* Recipe Content */}
                <CardContent className="p-6">
                  <div className="flex items-start justify-between mb-3">
                    <CardTitle className="text-xl group-hover:text-orange-500 transition-colors">
                      {recipe.title}
                    </CardTitle>
                    <Button variant="ghost" size="sm" className="text-gray-400 hover:text-red-500">
                      <Heart className="h-5 w-5" />
                    </Button>
                  </div>

                  <p className="text-gray-600 dark:text-gray-300 text-sm mb-4 line-clamp-2">
                    {recipe.description}
                  </p>

                  {/* Recipe Meta */}
                  <div className="flex items-center justify-between text-sm text-gray-500 dark:text-gray-400 mb-4">
                    <div className="flex items-center space-x-4">
                      <div className="flex items-center space-x-1">
                        <Clock className="h-4 w-4" />
                        <span>{recipe.time}</span>
                      </div>
                      <Badge variant={
                        recipe.difficulty === 'easy' ? 'default' :
                        recipe.difficulty === 'medium' ? 'secondary' : 'destructive'
                      }>
                        {recipe.difficulty === 'easy' ? '–õ–µ–≥–∫–æ' : 
                         recipe.difficulty === 'medium' ? '–°—Ä–µ–¥–Ω–µ' : '–°–ª–æ–∂–Ω–æ'}
                      </Badge>
                    </div>
                  </div>

                  {/* Ingredients Preview */}
                  <div className="mb-4">
                    <div className="text-xs text-gray-500 dark:text-gray-400 mb-2">–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã:</div>
                    <div className="flex flex-wrap gap-1">
                      {recipe.ingredients.slice(0, 3).map((ingredient, i) => (
                        <Badge key={i} variant="outline" className="text-xs">
                          {ingredient}
                        </Badge>
                      ))}
                      {recipe.ingredients.length > 3 && (
                        <span className="text-xs text-gray-500 dark:text-gray-400">
                          +{recipe.ingredients.length - 3} –µ—â–µ
                        </span>
                      )}
                    </div>
                  </div>

                  {/* Recipe Footer */}
                  <div className="flex items-center justify-between pt-4 border-t border-gray-200 dark:border-gray-700">
                    <div className="flex items-center space-x-3">
                      <div className="flex items-center space-x-1">
                        <Star className="h-4 w-4 text-yellow-400 fill-current" />
                        <span className="text-sm font-semibold">{recipe.rating}</span>
                      </div>
                      <div className="flex items-center space-x-1 text-gray-500 dark:text-gray-400">
                        <Heart className="h-4 w-4" />
                        <span className="text-sm">{recipe.likes}</span>
                      </div>
                    </div>
                    <div className="text-sm text-gray-500 dark:text-gray-400">
                      –æ—Ç {recipe.author}
                    </div>
                  </div>
                </CardContent>
              </Card>
            </motion.div>
          ))}
        </div>

        {/* No Results */}
        {filteredRecipes.length === 0 && (
          <div className="text-center py-16">
            <div className="text-6xl mb-4">üîç</div>
            <h3 className="text-xl font-semibold text-gray-900 dark:text-white mb-2">
              –†–µ—Ü–µ–ø—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã
            </h3>
            <p className="text-gray-600 dark:text-gray-300">
              –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–∏—Å–∫–∞ –∏–ª–∏ —Ñ–∏–ª—å—Ç—Ä—ã
            </p>
          </div>
        )}
      </div>
      </div>
    </>
  );
}
